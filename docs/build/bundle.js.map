{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/storageService.js","../../src/dateUtils.js","../../src/stores.js","../../src/DatePicker.svelte","../../src/DobPicker.svelte","../../src/utils.js","../../src/SpanDetail.svelte","../../src/CurrentWeekDetails.svelte","../../src/CreateTimeSpan.svelte","../../src/WeekDot.svelte","../../src/Calendar.svelte","../../src/Settings.svelte","../../src/EditTimeSpans.svelte","../../src/EditTimeSpan.svelte","../../src/Notices.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export function save(key, value) {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch(e) {\n    alert('Error saving to localStorage: ' + e);\n  }\n}\n\nexport function load(key) {\n  try {\n    const encoded = localStorage.getItem(key);\n\n    if(!encoded) {\n      return null;\n    }\n\n    return JSON.parse(encoded);\n  } catch(e) {\n    alert('Error loading from localStorage: ' + e);\n  }\n}\n","export const today = stringify(new Date());\n\nexport function clone(date) {\n  return new Date(date.getTime());\n}\n\nexport function stringify(date) {\n  return date.toISOString().substr(0, 10);\n}\n\nexport function add(date, amount, unit) {\n  let functionName;\n\n  switch(unit) {\n    case 'days':\n      functionName = 'Date';\n      break;\n    case 'years':\n      functionName = 'FullYear';\n      break;\n    default:\n      throw new Error('Only days and years supported');\n  }\n\n  const newDate = clone(date);\n  newDate['setUTC' + functionName](newDate['getUTC' + functionName]() + amount);\n  return newDate;\n}\n\nexport function generateYears(dateOfBirth) {\n  let yearIterator = clone(dateOfBirth);\n  const allYears = [];\n\n  for(let y = 0; y < 100; y++) {\n    let startOfYear = yearIterator;\n    let endOfYear = add(add(startOfYear, 1, 'years'), -1, 'days');\n\n    let weekIterator = clone(startOfYear);\n    const allWeeks = [];\n\n    for(let w = 1; w <= 52; w++) {\n      let startOfWeek = weekIterator;\n\n      weekIterator = add(weekIterator, 6, 'days');\n      let endOfWeek = weekIterator;\n\n      while(w === 52 && stringify(endOfWeek) < stringify(endOfYear)) {\n        weekIterator = add(weekIterator, 1, 'days');\n        endOfWeek = weekIterator;\n      }\n\n      allWeeks.push({\n        weekNumber: w,\n        age: y,\n        startDate: stringify(startOfWeek),\n        endDate: stringify(endOfWeek),\n        matchedTimeSpans: [],\n      });\n\n      weekIterator = add(weekIterator, 1, 'days');\n    }\n\n    allYears.push({\n      year: yearIterator.getFullYear(),\n      age: y,\n      startDate: stringify(startOfYear),\n      endDate: stringify(endOfYear),\n      weeks: allWeeks,\n    });\n\n    yearIterator = add(yearIterator, 1, 'years');\n  }\n\n  return allYears;\n}\n","import {writable, derived} from 'svelte/store';\nimport {load} from './storageService';\nimport {today} from './dateUtils';\n\nexport const appMode = writable('default');\nexport const showSettings = writable(false);\nexport const currentWeek = writable(null);\nexport const clickedWeek = writable(null);\nexport const dobString = writable(load('dateOfBirth') || today);\nexport const timeSpans = writable(load('timeSpans') || []);\nexport const editIdx = writable(null);\n\nexport const categories = derived(timeSpans, $timeSpans => {\n  const categories = [];\n\n  for(let timeSpan of $timeSpans) {\n    if(!categories.includes(timeSpan.category)) {\n      categories.push(timeSpan.category);\n    }\n  }\n\n  if(!categories.length) {\n    categories.push('Default');\n  }\n\n  return [...new Set(categories)];\n});\n\nexport const settings = writable(load('settings') || {\n  showPast: true,\n  blinkNow: true,\n});\n\nexport const newTimeSpan = writable({\n  startDate: null,\n  endDate: null,\n  name: '',\n  description: '',\n  category: '',\n  style: {},\n});\n","<script>\n  export let dateString;\n  export let startYear;\n\n  let year = dateString.substr(0, 4);\n  let month = dateString.substr(5, 2);\n  let day = dateString.substr(8, 2);\n\n  $: {\n    dateString = `${year}-${month}-${day}`;\n\n    // Check for valid date\n    const date = new Date(dateString);\n    if(isNaN(date.getTime())) {\n      day = '28';\n      dateString = `${year}-${month}-${day}`;\n    }\n  }\n</script>\n\n<select bind:value={year}>\n  {#each [...Array(100).keys()].map(y => (startYear + y).toString()) as year}\n    <option>{year}</option>\n  {/each}\n</select>\n-\n<select bind:value={month}>\n  {#each [...Array(12).keys()].map(m => (m + 1).toString().padStart(2, '0')) as month}\n    <option>{month}</option>\n  {/each}\n</select>\n-\n<select bind:value={day}>\n  {#each [...Array(31).keys()].map(d => (d + 1).toString().padStart(2, '0')) as day}\n    <option>{day}</option>\n  {/each}\n</select>\n","<script>\n  import {dobString} from './stores';\n  import {add} from './dateUtils';\n  import {save} from './storageService';\n  import DatePicker from './DatePicker.svelte';\n\n  let startYear = add(new Date(), -99, 'years').getFullYear();\n\n  $: {\n    save('dateOfBirth', $dobString);\n  }\n</script>\n\n<div class=\"dob-picker\">\n  Your day of birth: <DatePicker bind:dateString={$dobString} startYear={startYear}/>\n</div>\n","import {today} from './dateUtils';\n\nexport function getRandomId() {\n  return Math.floor(Math.random() * 16 ** 6).toString(16).padStart(6, '0');\n}\n\nexport function isMarked(appMode, newTimeSpan, currentWeek, week) {\n\n  // Mark only once the start date was clicked.\n  if(appMode !== 'create-time-span' || !newTimeSpan.startDate) {\n    return false;\n  }\n\n  let endDateCondition;\n\n  // Mark all hovered until end date is clicked\n  if(!newTimeSpan.endDate) {\n    endDateCondition = currentWeek && week.startDate <= currentWeek.endDate;\n  } else {\n    endDateCondition = week.startDate <= (newTimeSpan.endDate === 'ongoing' ? today : newTimeSpan.endDate);\n  }\n\n  return endDateCondition && week.endDate >= newTimeSpan.startDate;\n}\n\nexport function isDisabled(appMode, newTimeSpan, week) {\n  if(appMode !== 'create-time-span' || !newTimeSpan.startDate || newTimeSpan.endDate) {\n    return false;\n  }\n\n  return week.endDate < newTimeSpan.startDate;\n}\n\nexport function makeStyleString(styleMap) {\n  let style = '';\n\n  for(let key in styleMap) {\n    let unit = '';\n\n    if(['border-width'].includes(key)) {\n      unit = 'px';\n    }\n\n    style += styleMap[key] !== null ? `${key}:${styleMap[key]}${unit};` : '';\n  }\n\n  return style;\n}\n\nexport function assembleStylesMap(week, newStylesMap = null) {\n  const stylesMap = {\n    'background-color': null,\n    'border-color': null,\n    'border-width': null,\n  };\n\n  for(let span of week.matchedTimeSpans) {\n    for(let key in stylesMap) {\n      if(span.style[key] !== null) {\n        stylesMap[key] = span.style[key];\n      }\n    }\n  }\n\n  if(newStylesMap) {\n    for(let key in newStylesMap) {\n      if(newStylesMap[key] !== null) {\n        stylesMap[key] = newStylesMap[key];\n      }\n    }\n  }\n\n  return stylesMap;\n}\n","<script>\n  import {makeStyleString} from './utils';\n\n  export let timeSpan;\n</script>\n\n<div class=\"span\">\n  <div class=\"dot-wrapper\">\n    <div class=\"dot\" style={makeStyleString(timeSpan.style)}/>\n  </div>\n  <div class=\"text\">\n    <div class=\"category\">{timeSpan.category}</div>\n    <strong>{timeSpan.name}</strong><br>\n    {timeSpan.startDate} - {timeSpan.endDate}\n    {#if timeSpan.description}\n      <div class=\"description\">{timeSpan.description}</div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .span {\n    display: flex;\n    align-items: flex-start;\n    font-size: 0.8rem;\n  }\n\n  .dot-wrapper {\n    margin-top: 0.5rem;\n  }\n\n  .dot {\n    border: 1px solid var(--black);\n    width: 1.2rem;\n    height: 1.2rem;\n    border-radius: 50%;\n    box-sizing: border-box;\n    margin-right: 0.4rem;\n  }\n\n  .description {\n    white-space: pre-wrap;\n  }\n</style>\n","<script>\n  import {currentWeek} from './stores';\n  import SpanDetail from './SpanDetail.svelte';\n</script>\n\n{#if $currentWeek}\n  <div class=\"current-week-details\">\n    <strong class=\"week\">Age {$currentWeek.age}, Week {$currentWeek.weekNumber}</strong><br>\n    {$currentWeek.startDate} - {$currentWeek.endDate}\n\n    {#if $currentWeek.matchedTimeSpans?.length}\n      <hr class=\"spacer\">\n      {#each $currentWeek.matchedTimeSpans as timeSpan}\n        <div class=\"detail-wrapper\">\n          <SpanDetail timeSpan={timeSpan}/>\n        </div>\n      {/each}\n    {/if}\n  </div>\n{/if}\n\n<style>\n  .current-week-details {\n    position: fixed;\n    right: 1rem;\n    top: 1rem;\n    border: 1px solid var(--black);\n    padding: 1rem;\n    width: 16rem;\n    background: var(--white);\n    border-radius: 0.3rem;\n    box-shadow: 0 0 2px 0 var(--black);\n  }\n\n  .week {\n    font-weight: 900;\n    text-transform: uppercase;\n  }\n\n  .spacer {\n    border: 0;\n    height: 0.3rem;\n    background: var(--grey);\n    margin: 1rem -1rem;\n  }\n\n  .detail-wrapper:not(:first-child) {\n    margin-top: 1rem;\n  }\n</style>\n","<script>\n  import {tick, onDestroy} from 'svelte';\n  import {appMode, timeSpans, categories, newTimeSpan, clickedWeek} from './stores';\n  import {save} from './storageService';\n  import CloseIcon from './img/close.svg';\n\n  let step = 'start';\n  let nameInput;\n  let catInput;\n  let categoryInputType = 'select';\n\n  $clickedWeek = null;\n  $newTimeSpan = {\n    startDate: null,\n    endDate: null,\n    name: '',\n    description: '',\n    category: $categories[0],\n    style: {\n      'background-color': '#00c3ff',\n      'border-color': null,\n      'border-width': null,\n    },\n  };\n\n  const unsubscribeClickedWeek = clickedWeek.subscribe(week => {\n    if(!week) {\n      return;\n    }\n\n    if(step === 'start') {\n      $newTimeSpan.startDate = week.startDate;\n      step = 'end';\n      return;\n    }\n\n    if(step === 'end') {\n      $newTimeSpan.endDate = week.endDate;\n      step = 'name';\n      nameInput.focus();\n    }\n  });\n\n  onDestroy(unsubscribeClickedWeek);\n\n  function createTimeSpan() {\n    $timeSpans = [\n      ...$timeSpans,\n      $newTimeSpan,\n    ];\n\n    save('timeSpans', $timeSpans);\n\n    $appMode = 'default';\n  }\n\n  async function handleCategoryChange(event) {\n    if(event.target.value === '$$createNew') {\n      $newTimeSpan.category = '';\n      categoryInputType = 'input';\n      await tick();\n      catInput.focus();\n    } else {\n      $newTimeSpan.category = event.target.value;\n    }\n  }\n\n  function handleCatBlur(event) {\n    if(!event.target.value.trim()) {\n      $newTimeSpan.category = $categories[0];\n      categoryInputType = 'select';\n    }\n  }\n\n  function setNull(key) {\n    $newTimeSpan.style[key] = null;\n  }\n</script>\n\n<div class=\"create-time-span\">\n  <div class=\"title\">Create time span</div>\n\n  <a class=\"close\" on:click={() => $appMode = 'default'}>\n    {@html CloseIcon}\n  </a>\n\n  <div class=\"step\" class:is-active={step === 'start'}>\n    {#if !$newTimeSpan.startDate}\n      <div class=\"substep\">Pick a start date from the calendar</div>\n    {:else}\n      <div class=\"substep\">Start: {$newTimeSpan.startDate}</div>\n    {/if}\n  </div>\n\n  <div class=\"step\" class:is-active={step === 'end'}>\n    <div class=\"substep\">\n      {#if !$newTimeSpan.endDate}\n        Pick an end date or click\n        <button on:click={() => $clickedWeek = {endDate: 'ongoing'}} class=\"ongoing\">ongoing</button>\n      {:else}\n        End: {$newTimeSpan.endDate}\n      {/if}\n    </div>\n  </div>\n\n  <div class=\"step\" class:is-active={step === 'name'}>\n    <div class=\"substep\">\n      <label class=\"substep-head\" for=\"name\">Name</label>\n      <input bind:value={$newTimeSpan.name} bind:this={nameInput} id=\"name\">\n    </div>\n    <div class=\"substep\">\n      <label class=\"substep-head\" for=\"description\">Description</label>\n      <textarea bind:value={$newTimeSpan.description} id=\"description\" rows=\"3\"></textarea>\n    </div>\n    <div class=\"substep\">\n      <label class=\"substep-head\" for=\"category\">Category</label>\n      {#if categoryInputType === 'select'}\n        <select on:change={handleCategoryChange} id=\"category\">\n          {#each $categories as category}\n            <option>{category}</option>\n          {/each}\n          <option value=\"$$createNew\">Create new category...</option>\n        </select>\n      {:else}\n        <input bind:value={$newTimeSpan.category} bind:this={catInput} on:blur={handleCatBlur} id=\"category\">\n      {/if}\n    </div>\n    <div class=\"substep\">\n      <div class=\"substep-head\">Styling</div>\n      <div class=\"style-row\">\n        {#if $newTimeSpan.style['background-color'] !== null}\n          <input type=\"color\" bind:value={$newTimeSpan.style['background-color']} id=\"bg-color\">\n          <div>\n            <label for=\"bg-color\">Background color</label>\n            <a href=\"#\" on:click|preventDefault={() => setNull('background-color')}>unset</a>\n          </div>\n        {:else}\n          <a href=\"#\" on:click|preventDefault={() => $newTimeSpan.style['background-color'] = '#00c3ff'}>\n            Set background color\n          </a>\n        {/if}\n      </div>\n      <div class=\"style-row\">\n        {#if $newTimeSpan.style['border-color'] !== null}\n          <input type=\"color\" bind:value={$newTimeSpan.style['border-color']} id=\"b-color\">\n          <div>\n            <label for=\"b-color\">Border color</label>\n            <a href=\"#\" on:click|preventDefault={() => setNull('border-color')}>unset</a>\n          </div>\n        {:else}\n          <a href=\"#\" on:click|preventDefault={() => $newTimeSpan.style['border-color'] = '#000000'}>\n            Set border color\n          </a>\n        {/if}\n      </div>\n      <div class=\"style-row\">\n        {#if $newTimeSpan.style['border-width'] !== null}\n          <input type=\"range\" min=\"0\" max=\"9\" bind:value={$newTimeSpan.style['border-width']} id=\"b-width\">\n          <div>\n            <label for=\"b-width\">Border width</label>\n            <a href=\"#\" on:click|preventDefault={() => setNull('border-width')}>unset</a>\n          </div>\n        {:else}\n          <a href=\"#\" on:click|preventDefault={() => $newTimeSpan.style['border-width'] = 1}>\n            Set border width\n          </a>\n        {/if}\n      </div>\n    </div>\n\n    <button on:click={createTimeSpan} class=\"create-button\"\n            disabled={!$newTimeSpan.name?.trim() || !$newTimeSpan.category?.trim()}>\n      Create time span\n    </button>\n  </div>\n</div>\n\n<style>\n  .create-time-span {\n    position: fixed;\n    left: 1rem;\n    top: 1rem;\n    border: 1px solid var(--black);\n    padding: 1rem;\n    width: 18rem;\n    background: white;\n    border-radius: 0.3rem;\n    box-shadow: 0 0 2px 0 var(--black);\n  }\n\n  .title {\n    font-weight: 900;\n    text-transform: uppercase;\n  }\n\n  .step {\n    pointer-events: none;\n    opacity: 0.4;\n    transition: all 0.2s ease-out;\n  }\n\n  .step.is-active {\n    pointer-events: all;\n    opacity: 1;\n  }\n\n  .substep {\n    margin: 0.6rem 0;\n  }\n\n  .ongoing {\n    padding: 0.2rem 1rem;\n  }\n\n  .substep-head {\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n    font-size: 0.8rem;\n    text-transform: uppercase;\n  }\n\n  label.substep-head {\n    display: block;\n  }\n\n  input {\n    vertical-align: middle;\n  }\n\n  #name, #description {\n    width: 15rem;\n  }\n\n  #description {\n    resize: vertical;\n    font-family: inherit;\n    font-size: 0.8rem;\n    line-height: 1.2;\n  }\n\n  .style-row {\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.5rem;\n  }\n\n  .style-row input {\n    width: 6rem;\n    margin: 0 0.5rem 0 0;\n  }\n\n  .style-row a {\n    font-size: 0.8rem;\n  }\n\n  .create-button {\n    margin-top: 1rem;\n  }\n\n  .close {\n    position: absolute;\n    right: 0.3rem;\n    top: 0.3rem;\n    cursor: pointer;\n  }\n</style>\n","<script>\n  import {appMode, currentWeek, settings, clickedWeek, timeSpans, newTimeSpan} from './stores';\n  import {isMarked, isDisabled, assembleStylesMap, makeStyleString} from './utils';\n  import {today} from './dateUtils';\n\n  export let week;\n  let classNames;\n  let style = '';\n\n  $: {\n    const classMap = {\n      'is-past': $settings.showPast && week.endDate <= today,\n      'is-now': $settings.blinkNow && week.startDate <= today && week.endDate >= today,\n      'is-hovered': $currentWeek && week.startDate <= $currentWeek.endDate && week.endDate >= $currentWeek.startDate,\n      'is-disabled': isDisabled($appMode, $newTimeSpan, week),\n    };\n\n    let classCollection = ['week-wrapper'];\n\n    for(let className in classMap) {\n      if(classMap[className]) {\n        classCollection.push(className);\n      }\n    }\n\n    for(let timeSpan of week.matchedTimeSpans) {\n      classCollection.push(timeSpan.id);\n    }\n\n    classNames = classCollection.join(' ');\n  }\n\n  $: {\n    $timeSpans; // To trigger updates in edit mode\n    style = makeStyleString(assembleStylesMap(week));\n  }\n\n  $: {\n    if(isMarked($appMode, $newTimeSpan, $currentWeek, week)) {\n      style = makeStyleString(assembleStylesMap(week, $newTimeSpan.style));\n    } else {\n      style = makeStyleString(assembleStylesMap(week));\n    }\n  }\n</script>\n\n<div class={classNames}\n     on:mouseenter={() => $currentWeek = week} on:mouseleave={() => $currentWeek = null}\n     on:click={() => $clickedWeek = week}>\n  <div class=\"week\" style={style}/>\n</div>\n\n<style>\n  .week-wrapper {\n    padding: 0.1rem;\n  }\n\n  .week {\n    border: 1px solid var(--black);\n    width: 1.2rem;\n    height: 1.2rem;\n    border-radius: 50%;\n    box-sizing: border-box;\n  }\n\n  .is-past .week {\n    background: var(--grey);\n  }\n\n  @keyframes blinkNow {\n    0%, 49% {\n      opacity: 1;\n    }\n    50%, 100% {\n      opacity: 0;\n    }\n  }\n\n  .is-now .week {\n    animation: blinkNow 1s infinite;\n  }\n\n  .is-hovered .week {\n    box-shadow: 0 0 0 2px var(--black);\n  }\n\n  .is-disabled {\n    pointer-events: none;\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n</style>\n","<script>\n  import WeekDot from './WeekDot.svelte';\n  import {generateYears, today} from './dateUtils';\n  import {dobString, timeSpans} from './stores';\n\n  let dateOfBirth;\n  let allYears;\n\n  $: {\n    dateOfBirth = new Date($dobString);\n    allYears = generateYears(dateOfBirth);\n  }\n\n  $: {\n    for(let year of allYears) {\n      for(let week of year.weeks) {\n        week.matchedTimeSpans = [];\n        for(let timeSpan of $timeSpans) {\n          if(\n            week.startDate < (timeSpan.endDate === 'ongoing' ? today : timeSpan.endDate) &&\n            week.endDate > timeSpan.startDate\n          ) {\n            week.matchedTimeSpans = [...week.matchedTimeSpans, timeSpan];\n          }\n        }\n      }\n    }\n  }\n</script>\n\n<div class=\"life\">\n  <div class=\"year\">\n    <div class=\"year-label\">&nbsp;</div>\n    <div style=\"flex: 1\">weeks</div>\n  </div>\n  <div class=\"year\">\n    <div class=\"label year-label\">age ↓</div>\n    {#each [...Array(52).keys()] as week}\n      <div class=\"label week-label\">{week + 1}</div>\n    {/each}\n  </div>\n  {#each allYears as year}\n    <div class=\"year\">\n      <div class=\"label year-label\">\n        {year.age}\n      </div>\n      {#each year.weeks as week}\n        <WeekDot week={week}/>\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .life {\n    display: inline-block;\n    margin: 2rem 2rem 2rem 0;\n    font-family: monospace;\n  }\n\n  .label {\n    height: 1rem;\n    border: 1px solid transparent;\n  }\n\n  .year-label {\n    width: 2.5rem;\n    margin: 0 0.5rem 0 0;\n    text-align: right;\n    line-height: 1rem;\n  }\n\n  .week-label {\n    width: 1.2rem;\n    margin: 0 0.1rem;\n    text-align: center;\n    box-sizing: border-box;\n  }\n\n  .year {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import { settings, showSettings } from './stores';\n  import CloseIcon from './img/close.svg';\n  import { save, load } from './storageService';\n\n  let domNode;\n  let fileInput;\n\n  function close(event) {\n    $showSettings = false;\n  }\n\n  $: {\n    save('settings', $settings);\n  }\n\n  function exportFile() {\n    const exp = {\n      dateOfBirth: load('dateOfBirth'),\n      timeSpans: load('timeSpans'),\n      settings: load('settings'),\n    };\n\n    const tmpElm = document.createElement('a');\n    tmpElm.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(exp)));\n    tmpElm.setAttribute('download', 'your-life.json');\n\n    tmpElm.style.display = 'none';\n    document.body.appendChild(tmpElm);\n\n    tmpElm.click();\n\n    document.body.removeChild(tmpElm);\n  }\n\n  onMount(() => {\n    fileInput.addEventListener('change', event => {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', event => {\n        try {\n          const imp = JSON.parse(event.target.result);\n\n          save('dateOfBirth', imp.dateOfBirth);\n          save('timeSpans', imp.timeSpans);\n          save('settings', imp.settings);\n\n          alert('Import successful. Reloading page.');\n          location.reload();\n        } catch(e) {\n          alert('Error importing file: ' + e.message);\n        }\n      });\n\n      reader.readAsText(event.target.files[0], 'UTF-8');\n    });\n  });\n\n  function importFile() {\n    if(window.confirm('Do you really want to irreversibly overwrite your current data?')) {\n      fileInput.click();\n    }\n  }\n</script>\n\n<div class=\"settings\" bind:this={domNode}>\n  <div class=\"title\">Settings</div>\n\n  <a class=\"close\" on:click={close}>\n    {@html CloseIcon}\n  </a>\n\n  <div class=\"checkboxes\">\n    <label>\n      <input type=\"checkbox\" bind:checked={$settings.showPast}> Paint past weeks in gray\n    </label>\n    <label>\n      <input type=\"checkbox\" bind:checked={$settings.blinkNow}> Blink current week\n    </label>\n  </div>\n\n  <div class=\"title\">Import/Export</div>\n\n  <div class=\"impex\">\n    <p class=\"small\">Export your data to a .json file</p>\n    <button on:click={exportFile}>\n      Export to file\n    </button>\n\n    <p class=\"small\">\n      Import your data from a previously exported .json file\n    </p>\n    <p class=\"small\">\n      <strong>\n        WARNING: All current data will be irreversibly overwritten\n        by the contents of the import file.\n      </strong>\n    </p>\n    <button on:click={importFile}>\n      Import from file\n    </button>\n    <input bind:this={fileInput} type=\"file\" style=\"display: none;\"/>\n  </div>\n</div>\n\n<style>\n  .settings {\n    position: fixed;\n    right: 1rem;\n    top: 1rem;\n    border: 1px solid var(--black);\n    padding: 1rem;\n    min-width: 12rem;\n    max-width: 16rem;\n    background: white;\n    border-radius: 0.3rem;\n    box-shadow: 0 0 2px 0 var(--black);\n  }\n\n  .title {\n    font-weight: 900;\n    text-transform: uppercase;\n  }\n\n  .title:not(:first-child) {\n    margin-top: 1rem;\n  }\n\n  .checkboxes, .impex {\n    margin: 0.5rem 0 0;\n  }\n\n  .checkboxes label {\n    display: block;\n  }\n\n  .small {\n    font-size: 0.8rem;\n  }\n\n  .close {\n    position: absolute;\n    right: 0.3rem;\n    top: 0.3rem;\n    cursor: pointer;\n  }\n</style>\n","<script>\n  import {appMode, timeSpans, editIdx} from './stores';\n  import {save} from './storageService';\n  import SpanDetail from './SpanDetail.svelte';\n\n  import CloseIcon from './img/close.svg';\n  import EditIcon from './img/edit.svg';\n  import TrashIcon from './img/trash.svg';\n  import UpIcon from './img/arrow-up.svg';\n  import DownIcon from './img/arrow-down.svg';\n\n  function move(idx, direction) {\n    [$timeSpans[idx + direction], $timeSpans[idx]] = [$timeSpans[idx], $timeSpans[idx + direction]];\n    save('timeSpans', $timeSpans);\n  }\n\n  function remove(idx) {\n    if(!window.confirm('Really delete?')) {\n      return;\n    }\n\n    $timeSpans = [\n      ...$timeSpans.slice(0, idx),\n      ...$timeSpans.slice(idx + 1),\n    ];\n\n    save('timeSpans', $timeSpans);\n  }\n</script>\n\n<div class=\"edit-time-spans\">\n  <div class=\"title\">Edit time spans</div>\n\n  <p class=\"info\">\n    For overlapping time spans, styles farther down will appear \"on top\".\n  </p>\n\n  <a class=\"close\" on:click={() => $appMode = 'default'}>\n    {@html CloseIcon}\n  </a>\n\n  <div class=\"spans-list\" class:is-disabled={$editIdx !== null}>\n    {#each $timeSpans as timeSpan, idx}\n      <div class=\"list-item\">\n        <SpanDetail timeSpan={timeSpan}/>\n        <div class=\"buttons\">\n          <button on:click={() => $editIdx = idx}>{@html EditIcon}</button>\n          <button on:click={() => remove(idx)}>{@html TrashIcon}</button>\n          {#if idx > 0}\n            <button on:click={() => move(idx, -1)}>{@html UpIcon}</button>\n          {/if}\n          {#if idx < $timeSpans.length - 1}\n           <button on:click={() => move(idx, 1)}>{@html DownIcon}</button>\n          {/if}\n        </div>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .edit-time-spans {\n    position: fixed;\n    left: 1rem;\n    top: 1rem;\n    border: 1px solid var(--black);\n    padding: 1rem;\n    width: 18rem;\n    background: white;\n    border-radius: 0.3rem;\n    box-shadow: 0 0 2px 0 var(--black);\n  }\n\n  .spans-list {\n    overflow: auto;\n    max-height: calc(100vh - 9rem);\n  }\n\n  .list-item {\n    margin-bottom: 1rem;\n  }\n\n  .is-disabled {\n    pointer-events: none;\n    opacity: 0.5;\n  }\n\n  .title {\n    font-weight: 900;\n    text-transform: uppercase;\n  }\n\n  .info {\n    font-size: 0.8rem;\n  }\n\n  .close {\n    position: absolute;\n    right: 0.3rem;\n    top: 0.3rem;\n    cursor: pointer;\n  }\n\n  .buttons {\n    padding-left: 1.6rem;\n    padding-top: 0.2rem;\n  }\n\n  .buttons button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.3rem;\n  }\n\n  .buttons :global(svg) {\n    height: 1em;\n    width: 1em;\n  }\n</style>\n","<script>\n  import {tick} from 'svelte';\n  import {timeSpans, editIdx, categories, dobString} from './stores';\n  import {save, load} from './storageService';\n  import {today} from './dateUtils';\n  import CloseIcon from './img/close.svg';\n  import DatePicker from './DatePicker.svelte';\n\n  let nameInput;\n  let catInput;\n  let categoryInputType = 'select';\n\n  function saveTimeSpan() {\n    save('timeSpans', $timeSpans);\n    $editIdx = null;\n  }\n\n  function discard() {\n    $timeSpans = load('timeSpans');\n    $editIdx = null;\n  }\n\n  async function handleCategoryChange(event) {\n    if(event.target.value === '$$createNew') {\n      $timeSpans[$editIdx].category = '';\n      categoryInputType = 'input';\n      await tick();\n      catInput.focus();\n    } else {\n      $timeSpans[$editIdx].category = event.target.value;\n    }\n  }\n\n  function handleCatBlur(event) {\n    if(!event.target.value.trim()) {\n      $timeSpans[$editIdx].category = $categories[0];\n      categoryInputType = 'select';\n    }\n  }\n\n  function setNull(key) {\n    $timeSpans[$editIdx].style[key] = null;\n  }\n</script>\n\n<div class=\"edit-time-span\">\n  <div class=\"title\">Change time span</div>\n\n  <a class=\"close\" on:click={discard}>{@html CloseIcon}</a>\n\n  <div class=\"step\">\n    <div class=\"substep\">\n      <div class=\"substep-head\">Start</div>\n      <DatePicker bind:dateString={$timeSpans[$editIdx].startDate} startYear={parseInt($dobString.substr(0, 4))}/>\n    </div>\n  </div>\n\n  <div class=\"step\">\n    <div class=\"substep\">\n      <div class=\"substep-head\">End</div>\n      {#if $timeSpans[$editIdx].endDate === 'ongoing'}\n        ongoing <a href=\"#\" on:click|preventDefault={() => $timeSpans[$editIdx].endDate = today} class=\"small-link\">set a date</a>\n      {:else}\n        <DatePicker bind:dateString={$timeSpans[$editIdx].endDate} startYear={parseInt($dobString.substr(0, 4))}/><br>\n        <a href=\"#\" on:click|preventDefault={() => $timeSpans[$editIdx].endDate = 'ongoing'} class=\"small-link\">set to ongoing</a>\n      {/if}\n    </div>\n  </div>\n\n  <div class=\"step\">\n    <div class=\"substep\">\n      <label class=\"substep-head\" for=\"name\">Name</label>\n      <input bind:value={$timeSpans[$editIdx].name} id=\"name\">\n    </div>\n    <div class=\"substep\">\n      <label class=\"substep-head\" for=\"description\">Description</label>\n      <textarea bind:value={$timeSpans[$editIdx].description} id=\"description\" rows=\"3\"></textarea>\n    </div>\n    <div class=\"substep\">\n      <label class=\"substep-head\" for=\"category\">Category</label>\n      {#if categoryInputType === 'select'}\n        <select on:change={handleCategoryChange} value={$timeSpans[$editIdx].category} id=\"category\">\n          {#each $categories as category}\n            <option>{category}</option>\n          {/each}\n          <option value=\"$$createNew\">Create new category...</option>\n        </select>\n      {:else}\n        <input bind:value={$timeSpans[$editIdx].category} bind:this={catInput} on:blur={handleCatBlur} id=\"category\">\n      {/if}\n    </div>\n    <div class=\"substep\">\n      <div class=\"substep-head\">Styling</div>\n      <div class=\"style-row\">\n        {#if $timeSpans[$editIdx].style['background-color'] !== null}\n          <input type=\"color\" bind:value={$timeSpans[$editIdx].style['background-color']} id=\"bg-color\">\n          <div>\n            <label for=\"bg-color\">Background color</label>\n            <a href=\"#\" on:click|preventDefault={() => setNull('background-color')}>unset</a>\n          </div>\n        {:else}\n          <a href=\"#\" on:click|preventDefault={() => $timeSpans[$editIdx].style['background-color'] = '#00c3ff'}>\n            Set background color\n          </a>\n        {/if}\n      </div>\n      <div class=\"style-row\">\n        {#if $timeSpans[$editIdx].style['border-color'] !== null}\n          <input type=\"color\" bind:value={$timeSpans[$editIdx].style['border-color']} id=\"b-color\">\n          <div>\n            <label for=\"b-color\">Border color</label>\n            <a href=\"#\" on:click|preventDefault={() => setNull('border-color')}>unset</a>\n          </div>\n        {:else}\n          <a href=\"#\" on:click|preventDefault={() => $timeSpans[$editIdx].style['border-color'] = '#000000'}>\n            Set border color\n          </a>\n        {/if}\n      </div>\n      <div class=\"style-row\">\n        {#if $timeSpans[$editIdx].style['border-width'] !== null}\n          <input type=\"range\" min=\"0\" max=\"9\" bind:value={$timeSpans[$editIdx].style['border-width']} id=\"b-width\">\n          <div>\n            <label for=\"b-width\">Border width</label>\n            <a href=\"#\" on:click|preventDefault={() => setNull('border-width')}>unset</a>\n          </div>\n        {:else}\n          <a href=\"#\" on:click|preventDefault={() => $timeSpans[$editIdx].style['border-width'] = 1}>\n            Set border width\n          </a>\n        {/if}\n      </div>\n    </div>\n\n    <button on:click={saveTimeSpan} class=\"create-button\"\n            disabled={!$timeSpans[$editIdx].name?.trim() || !$timeSpans[$editIdx].category?.trim()}>\n      Save changes\n    </button>\n  </div>\n</div>\n\n<style>\n  .edit-time-span {\n    position: fixed;\n    right: 1rem;\n    bottom: 1rem;\n    border: 1px solid var(--black);\n    padding: 1rem;\n    min-width: 12rem;\n    background: white;\n    border-radius: 0.3rem;\n    box-shadow: 0 0 2px 0 var(--black);\n  }\n\n  .title {\n    font-weight: 900;\n    text-transform: uppercase;\n  }\n\n  .substep {\n    margin: 0.6rem 0;\n  }\n\n  .substep-head {\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n    font-size: 0.8rem;\n    text-transform: uppercase;\n  }\n\n  label.substep-head {\n    display: block;\n  }\n\n  input {\n    vertical-align: middle;\n  }\n\n  #name, #description {\n    width: 15rem;\n  }\n\n  #description {\n    resize: vertical;\n    font-family: inherit;\n    font-size: 0.8rem;\n    line-height: 1.2;\n  }\n\n  .style-row {\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.5rem;\n  }\n\n  .style-row input {\n    width: 6rem;\n    margin: 0 0.5rem 0 0;\n  }\n\n  .style-row a, .small-link {\n    font-size: 0.8rem;\n  }\n\n  .create-button {\n    margin-top: 1rem;\n  }\n\n  .close {\n    position: absolute;\n    right: 0.3rem;\n    top: 0.3rem;\n    cursor: pointer;\n  }\n</style>\n","<script>\n  import {load, save} from './storageService';\n\n  let hideMobileNotice = load('hideMobileNotice');\n  let hidePrivacyNotice = load('hidePrivacyNotice');\n  let hideUpdatesUntil = load('hideUpdatesUntil');\n\n  let updateDate = '2021-12-30';\n  let isUpdateVisible = !hideUpdatesUntil || hideUpdatesUntil < updateDate;\n\n  function removeMobileNotice() {\n    hideMobileNotice = true;\n    save('hideMobileNotice', true);\n  }\n\n  function removePrivacyNotice() {\n    hidePrivacyNotice = true;\n    save('hidePrivacyNotice', true);\n  }\n\n  function hideUpdatesNotice() {\n    isUpdateVisible = false;\n    save('hideUpdatesUntil', updateDate);\n  }\n</script>\n\n{#if !hidePrivacyNotice}\n  <div class=\"prv-notice\">\n    I do not collect or store any of your personal data.\n    Everything is saved in your browser’s memory for your eyes only.<br>\n    <strong>If you delete your cookies, all will be gone.</strong><br>\n    <button on:click={removePrivacyNotice}>Ok</button>\n  </div>\n{/if}\n\n{#if !hideMobileNotice}\n  <div class=\"mobile-notice\">\n    While this app should theoretically work on mobile devices,\n    you'll have a much better experience on screens with at least 1280 pixels in width.<br>\n    <button on:click={removeMobileNotice}>Ok</button>\n  </div>\n{/if}\n\n{#if isUpdateVisible}\n  <div class=\"update-notice\">\n    <div class=\"update-head\">Update {updateDate}</div>\n    <p>\n      Hey you!\n    </p>\n    <p>\n      It's been over 6 months since this app was launched and people still seem to be using it,\n      which makes me really happy. :)\n      So thank you! I'm hoping you have a good time keeping track of your life!\n    </p>\n    <p>\n      I decided to implement <strong>two little updates:</strong>\n    </p>\n    <p>\n      You can now <strong>import and export</strong> your data via the settings menu.\n      This way you can easily backup everything and switch to another browser or computer.\n    </p>\n    <p>\n      Also, for each time span, you can now add a short <strong>description</strong> which was a feature request\n      I received multiple times.\n    </p>\n    <p>\n      For feedback, write me an email to mail (at) heiko-salmon (dot) de\n    </p>\n    <button on:click={hideUpdatesNotice}>Hide until next update</button>\n  </div>\n{/if}\n\n<style>\n  .prv-notice {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100vw;\n    background: var(--sky);\n    text-align: center;\n    padding: 1rem;\n    z-index: 10;\n    box-sizing: border-box;\n  }\n\n  .prv-notice button {\n    padding: 0.3rem;\n    margin-top: 0.5rem;\n  }\n\n  .mobile-notice {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    background: salmon;\n    text-align: center;\n    padding: 1rem;\n    z-index: 20;\n    box-sizing: border-box;\n  }\n\n  .mobile-notice button {\n    padding: 0.3rem;\n    margin-top: 0.5rem;\n  }\n\n  @media (min-width: 1280px) {\n\n    .mobile-notice {\n      display: none;\n    }\n  }\n\n  .update-notice {\n    position: fixed;\n    left: 1rem;\n    bottom: 1rem;\n    border: 1px solid var(--black);\n    padding: 1rem;\n    min-width: 12rem;\n    max-width: 16rem;\n    background: white;\n    border-radius: 0.3rem;\n    box-shadow: 0 0 2px 0 var(--black);\n  }\n\n  .update-head {\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n</style>\n","<script>\n  import {appMode, timeSpans, showSettings, editIdx} from './stores';\n  import DobPicker from './DobPicker.svelte';\n  import CurrentWeekDetails from './CurrentWeekDetails.svelte';\n  import CreateTimeSpan from './CreateTimeSpan.svelte';\n  import Calendar from './Calendar.svelte';\n  import Settings from './Settings.svelte';\n  import EditTimeSpans from './EditTimeSpans.svelte';\n  import EditTimeSpan from './EditTimeSpan.svelte';\n  import Notices from './Notices.svelte';\n</script>\n\n<main>\n  <h1 class=\"title\">YOUR LIFE</h1>\n\n  <p class=\"info\">\n    Wonder what this is? Look at\n    <a href=\"https://waitbutwhy.com/2014/05/life-weeks.html\" target=\"_blank\">this blog post by Wait But Why</a>\n    and\n    <a href=\"https://www.youtube.com/watch?v=JXeJANDKwDc\" target=\"_blank\">this video by Kurzgesagt</a>.\n    I'm not affiliated with either.\n  </p>\n\n  <DobPicker/>\n\n  <div class=\"create-button-wrapper\">\n    <div>\n      <button on:click|stopPropagation={() => $appMode = 'create-time-span'}>Create time span</button>\n    </div>\n    {#if $timeSpans.length}\n      <div>\n        <button on:click|stopPropagation={() => $appMode = 'edit-time-spans'}>Edit time spans</button>\n      </div>\n    {/if}\n  </div>\n\n  <div class=\"settings-button-wrapper\">\n    <button on:click|stopPropagation={() => $showSettings = true}>Settings</button>\n  </div>\n\n  <Calendar/>\n</main>\n\n<CurrentWeekDetails/>\n\n{#if $showSettings}\n  <Settings/>\n{/if}\n\n{#if $appMode === 'create-time-span'}\n  <CreateTimeSpan/>\n{/if}\n\n{#if $appMode === 'edit-time-spans'}\n  <EditTimeSpans/>\n{/if}\n\n{#if $editIdx !== null}\n  <EditTimeSpan/>\n{/if}\n\n<Notices/>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    margin: 0 auto;\n    font-size: 0.7rem;\n  }\n\n  .title {\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n    margin-bottom: 0;\n  }\n\n  .info {\n    max-width: 20rem;\n    margin: 1rem auto 1.5rem;\n    line-height: 1.5;\n  }\n\n  .create-button-wrapper {\n    position: fixed;\n    left: 1.2rem;\n    top: 1.2rem;\n    text-align: left;\n  }\n\n  .create-button-wrapper button {\n    margin-bottom: 1rem;\n  }\n\n  .settings-button-wrapper {\n    position: fixed;\n    right: 1.2rem;\n    top: 1.2rem;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","stop_propagation","stopPropagation","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","type","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","save","key","localStorage","setItem","JSON","stringify","e","alert","load","encoded","getItem","parse","today","Date","clone","date","getTime","toISOString","substr","amount","unit","functionName","newDate","appMode","showSettings","currentWeek","clickedWeek","dobString","timeSpans","editIdx","categories","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$timeSpans","timeSpan","includes","category","settings","showPast","blinkNow","newTimeSpan","startDate","endDate","description","style","toString","padStart","dateString","startYear","year","month","day","isNaN","y","getFullYear","$dobString","isDisabled","week","makeStyleString","styleMap","assembleStylesMap","newStylesMap","stylesMap","background-color","border-color","border-width","span","matchedTimeSpans","age","weekNumber","trim","CloseIcon","nameInput","catInput","step","categoryInputType","$clickedWeek","$newTimeSpan","$categories","unsubscribeClickedWeek","focus","setNull","$appMode","classNames","classMap","is-past","$settings","is-now","is-hovered","$currentWeek","is-disabled","classCollection","className","id","join","endDateCondition","isMarked","weeks","dateOfBirth","allYears","yearIterator","startOfYear","endOfYear","weekIterator","allWeeks","w","startOfWeek","endOfWeek","generateYears","important","setProperty","domNode","fileInput","reader","FileReader","imp","location","reload","message","readAsText","files","$showSettings","exp","tmpElm","encodeURIComponent","display","body","click","window","confirm","move","idx","direction","remove","slice","$editIdx","parseInt","updateDate","hideMobileNotice","hidePrivacyNotice","hideUpdatesUntil","isUpdateVisible"],"mappings":"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"}